Processing...
Done!
try loading
No need processing
torch.Size([92, 20])
torch.Size([156])
{('query', 'follows', 'query'): tensor([[ 0,  2,  4,  5,  6,  7,  8, 10, 11, 12, 15, 17, 18, 19, 20, 23, 24, 26,
         27, 29, 30, 31, 32, 34, 35, 37, 38, 40, 42, 43, 45, 47, 48, 50, 52, 53,
         55, 57, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 75, 76, 77, 78, 79, 81,
         82, 83, 86, 87, 89, 90],
        [ 1,  3,  5,  6,  7,  8,  9, 11, 12, 13, 16, 18, 19, 20, 21, 24, 25, 27,
         28, 30, 31, 32, 33, 35, 36, 38, 39, 41, 43, 44, 46, 48, 49, 51, 53, 54,
         56, 58, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 76, 77, 78, 79, 80, 82,
         83, 84, 87, 88, 90, 91]]), ('query', 'clicks', 'product'): tensor([[  1,   0,   2,   2,   2,   3,   3,   4,   3,   5,   6,   4,   8,   5,
          11,  10,  13,  11,  16,  15,  16,  16,  16,  17,  21,  17,  21,  18,
          24,  23,  25,  24,  27,  26,  28,  27,  32,  29,  33,  30,  35,  34,
          35,  35,  35,  36,  35,  37,  38,  37,  38,  38,  41,  40,  44,  42,
          44,  43,  44,  44,  44,  45,  44,  46,  46,  45,  49,  47,  51,  50,
          51,  51,  53,  52,  54,  53,  56,  55,  58,  57,  60,  59,  63,  60,
          63,  61,  67,  66,  68,  67,  70,  69,  76,  75,  84,  81,  87,  86,
          87,  87,  90,  89,  91,  90],
        [  0,   1,   6,   6,   7,   6,   8,   7,   9,   7,  12,  14,  13,  16,
          17,  18,  18,  20,  28,  29,  29,  29,  30,  29,  37,  41,  38,  41,
          45,  46,  46,  47,  50,  51,  51,  52,  58,  61,  59,  62,  61,  62,
          62,  62,  63,  62,  64,  62,  66,  67,  67,  67,  70,  71,  77,  79,
          78,  79,  79,  79,  80,  79,  81,  79,  84,  85,  90,  92,  92,  93,
          93,  93,  97,  98,  98,  99, 100, 101, 102, 103, 104, 105, 105, 108,
         106, 108, 111, 112, 112, 113, 117, 118, 130, 131, 133, 136, 147, 148,
         148, 148, 150, 151, 151, 152]]), ('query', 'adds', 'product'): tensor([[  1,   0,   1,   1,   1,   2,   1,   3,   3,   2,   6,   4,   6,   5,
          13,  10,  13,  11,  14,  14,  14,  15,  14,  16,  14,  17,  15,  15,
          15,  16,  15,  17,  17,  17,  17,  18,  21,  19,  22,  22,  24,  23,
          25,  24,  27,  26,  27,  27,  27,  28,  31,  29,  35,  34,  38,  37,
          40,  40,  40,  41,  41,  42,  44,  42,  44,  43,  46,  45,  46,  46,
          46,  47,  49,  47,  51,  50,  51,  51,  54,  52,  56,  55,  58,  57,
          60,  59,  61,  60,  65,  65,  67,  66,  67,  67,  67,  68,  70,  69,
          71,  70,  72,  71,  73,  73,  74,  74,  74,  75,  80,  75,  84,  81,
          84,  82,  84,  83,  85,  85,  85,  86,  85,  87,  85,  88,  85,  89,
          85,  90,  85,  91,  85,  92,  90,  89,  91,  90],
        [  0,   1,   1,   1,   2,   1,   3,   1,   6,   7,  12,  14,  13,  14,
          17,  20,  18,  20,  24,  24,  25,  24,  26,  24,  27,  24,  28,  28,
          29,  28,  30,  28,  37,  37,  38,  37,  39,  41,  43,  43,  45,  46,
          46,  47,  50,  51,  51,  51,  52,  51,  58,  60,  61,  62,  66,  67,
          70,  70,  71,  70,  72,  71,  77,  79,  78,  79,  84,  85,  85,  85,
          86,  85,  90,  92,  92,  93,  93,  93,  97,  99, 100, 101, 102, 103,
         104, 105, 105, 106, 109, 109, 111, 112, 112, 112, 113, 112, 117, 118,
         118, 119, 119, 120, 124, 124, 127, 127, 128, 127, 130, 135, 133, 136,
         134, 136, 135, 136, 138, 138, 139, 138, 140, 138, 141, 138, 142, 138,
         143, 138, 144, 138, 145, 138, 150, 151, 151, 152]]), ('query', 'purchases', 'product'): tensor([[  1,   0,   3,   2,   6,   4,  11,  10,  13,  11,  13,  12,  15,  15,
          15,  16,  15,  17,  21,  17,  22,  22,  24,  23,  27,  26,  27,  27,
          27,  28,  38,  37,  41,  40,  41,  41,  41,  42,  46,  45,  46,  46,
          51,  50,  65,  65,  67,  66,  70,  69,  71,  70,  72,  71,  73,  73,
          73,  74,  74,  74,  80,  75,  84,  81,  85,  85,  86,  86,  90,  89,
          91,  90],
        [  0,   1,   6,   7,  12,  14,  17,  18,  18,  20,  19,  20,  28,  28,
          29,  28,  30,  28,  37,  41,  43,  43,  45,  46,  50,  51,  51,  51,
          52,  51,  66,  67,  70,  71,  71,  71,  72,  71,  84,  85,  85,  85,
          92,  93, 109, 109, 111, 112, 117, 118, 118, 119, 119, 120, 124, 124,
         125, 124, 127, 127, 130, 135, 133, 136, 138, 138, 147, 147, 150, 151,
         151, 152]])}
torch.Size([92, 100])
torch.Size([156, 100])
Traceback (most recent call last):
  File "model.py", line 69, in <module>
    debug()
  File "model.py", line 66, in debug
    out = node_encoder(data)
  File "/home/ec2-user/anaconda3/envs/pytorch-py37/lib/python3.7/site-packages/torch/nn/modules/module.py", line 1110, in _call_impl
    return forward_call(*input, **kwargs)
  File "model.py", line 27, in forward
    node_embedding = self.gnn(embedding, data.edge_index_dict)
  File "/home/ec2-user/anaconda3/envs/pytorch-py37/lib/python3.7/site-packages/torch/fx/graph_module.py", line 630, in wrapped_call
    raise e.with_traceback(None)
IndexError: index out of range in self
